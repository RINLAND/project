<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="employee">
	<!--쿼리 추가 위한 -->
	<sql id="searchData">
		<choose>
			<when test="words==''"></when>
			<when test="searchOpt=='all'">
				AND (emp_name LIKE CONCAT('%', #{words}, '%') OR
				emp_num LIKE CONCAT('%', #{words}, '%'))
			</when>
			<otherwise>
				AND ${searchOpt} = #{words}
			</otherwise>
		</choose>

	</sql>

	<select id="getEmpListAll" parameterType="hashmap" resultType="com.setup.test2.Model.EmpVO">
		SELECT
		emp_id AS empId,
		emp_team AS empTeamCode,
		T.team_name AS
		empTeamName,

		emp_grade AS empGradeCode,
		G.grade_name AS empGradeName,

		emp_num AS empNum,
		emp_name AS empName,
		emp_pwd AS empPwd,
		emp_date AS empDate,
		emp_confirm AS empConfirm,
		emp_enter as empEnter,
		emp_auth AS empAuth
		FROM grp_employee E,
		grp_team T, grp_grade G
		WHERE E.emp_team = T.team_id AND E.emp_grade =
		G.grade_id
		<include refid="searchData"></include>
		ORDER BY emp_id DESC LIMIT #{start}, #{end}

	</select>

	<select id="getEmpCount" resultType="int">
		SELECT
		COUNT(emp_id)
		FROM
		grp_employee E, grp_team T, grp_grade G
		WHERE E.emp_team = T.team_id
		AND E.emp_grade = G.grade_id <include refid="searchData"></include>

	</select>

	<delete id="setEmpDeleteOne" parameterType="int">
		DELETE FROM grp_employee
		WHERE emp_id = #{empId}

	</delete>
	
	
	<delete id="setEmpDeleteAll" parameterType="int">
		DELETE FROM grp_employee
		WHERE emp_id = #{empId}

	</delete>
	


	<update id="setEmpConfirmChange" parameterType="hashmap">
		UPDATE
		grp_employee SET emp_confirm = #{empConfirm} WHERE emp_id = #{empId}
	</update>

	<update id="setEmpAuthChange" parameterType="hashmap">
		UPDATE grp_employee
		SET emp_auth = #{empAuth} WHERE emp_id = #{empId}
	</update>

<!--여러개면 파라미터 타입이 map이나 get,set  -->
	<select id="getEmpNeedOne" parameterType="String" resultType="com.setup.test2.Model.EmpVO">
		SELECT
		emp_id AS empId,
		emp_team AS empTeamCode,
		T.team_name AS empTeamName,
		emp_grade AS empGradeCode,
		G.grade_name AS empGradeName,
		emp_num AS empNum,
		emp_name AS empName,
		emp_enter AS empEnter
		FROM grp_employee E,
		grp_team T, grp_grade G
		WHERE E.emp_team = T.team_id AND E.emp_grade = G.grade_id 
		AND emp_num = #{sessionNum}
	</select>
	
	<select id="getEmployeeNeedOne" parameterType="com.setup.test2.Model.EmpVO" resultType="com.setup.test2.Model.EmpVO">
		SELECT
			emp_id AS empId,
			emp_team AS empTeamCode,
			emp_grade AS empGradeCode,
			emp_num AS empNum,
			emp_name AS empName,
			emp_pwd AS empPwd,
			emp_enter AS empEnter,
			emp_confirm AS empConfirm,
			emp_auth AS empAuth,
			emp_gender AS empGender,
			emp_birth AS empBirth,
			emp_cp AS empCP,
			emp_in AS empIn,
			emp_tel AS empTel,
			emp_recruit AS empRecuit,
			emp_unique AS empUnique,
			emp_uniquedetail AS empUniquedetail,
			emp_military AS empMilitary,
			emp_hobby AS empHobby,
			emp_disability  AS empDisability,
			emp_reward AS empReward,
			emp_married AS empMarried,
			emp_level AS empLevel,
			emp_school AS empSchool,
			emp_major AS empMajor,
			emp_email AS empEmail,
			emp_license1 AS empLicense1,
			emp_license2 AS empLicense2,
			emp_lang1 AS empLang1,
			emp_lang2 AS empLang2,
			emp_award1 AS empAward1,
			emp_comment AS empComment,
			emp_address AS empAddress
			emp_photo AS empPhoto
		FROM grp_employee WHERE emp_num = #{empNum} AND emp_pwd = #{empPwd}
	</select>
	
	<select id="getEmpDetailOne" parameterType="com.setup.test2.Model.EmpVO" resultType="com.setup.test2.Model.EmpVO">
		SELECT 
			grp_employee.*, grp_emp_others.* 
		FROM grp_employee 
		LEFT JOIN grp_emp_others 
		ON  grp_employee.emp_num = grp_emp_others.emp_Dnum where emp_id = #{empId};
	</select>
	
	
	
</mapper>